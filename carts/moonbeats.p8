pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- moonbeats
-- by berg bros

left,right,up,down,fire1,fire2=0,1,2,3,4,5
black,dark_blue,dark_purple,dark_green,brown,dark_gray,light_gray,white,red,orange,yellow,green,blue,indigo,pink,peach=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15

p1 = {
 x=0,
 prev_x=0,
 y=0,
 lane=0,
 facing="left",
 update=function()
  p1.prev_x=p1.x
  if (p1.x > lane.position[1] and btnp(⬅️)) then
   p1.lane -= 1
   p1.x=lane.position[p1.lane]
  elseif (p1.x < (lane.position[#lane.position]) and btnp(➡️)) then
   p1.lane += 1
   p1.x=lane.position[p1.lane]
  end
  
  if (p1.prev_x != p1.x) then
   p1.facing = p1.prev_x < p1.x and "left" or "right"
  end
  
  if (btn(❎)) then
   music(2)
  end
 end,
 draw=function()
  if (p1.facing == "left") then
   spr(1,p1.x,p1.y,1,1,true)
  else
   spr(1,p1.x,p1.y,1,1)
  end
 end,
}

lane = {
 y=115,
 color={ red, yellow, green, blue },
 count=3,
 padding=15,
 width=8,
 start=0,
 position={},
}

function _init()
 --enable/disable debug info
 debug=true
 
 --define noteboards
 init_noteboards()

 --setup play rectangles
 lane.count = 3
 lane.padding = 15
 lane.width = 8
 lane.start = 127 - (((lane.count + 1) * lane.width) + (lane.padding * (lane.count)))
 lane.color = { red, yellow, green, blue }
 for i=0,lane.count do
  lane.position[i + 1] = lane.start + ((lane.width + lane.padding) * i)
 end

 --init player location
 p1.lane = 1
 p1.x = lane.position[p1.lane]
 p1.y = lane.y
end

function _update60()
 p1.update()

 if debug then update_debug() end
end

function _draw()
	cls()
	p1.draw()
 draw_lanes()
 update_nb()
 if debug then draw_debug() end
end

function draw_lanes()
 local y0 = 115
 local width = 8
 local height = 8
 for i=0,(#lane.position - 1) do
 rect(
  lane.position[i + 1],
  y0,
  lane.position[i + 1] + width,
  y0 + height,
  lane.color[i + 1]
 )
 end
end
-->8
--tab 1
-- noteboard functions
function init_noteboards()
 nb_patterns={
   --pattern 1
   {},
   --pattern 2
   {}
 }
 nb_patterns[1][1]={20,"x...y...x...y...x...y...x...y..."}
 nb_patterns[1][2]={20,"..........x.x.............x.x..."}
 nb_patterns[1][3]=nil
 nb_patterns[1][4]=nil
 nb_patterns[2][1]={20,"xx........y.....xx........y....."}
 nb_patterns[2][2]={20,"................................"}
 nb_patterns[2][3]=nil
 nb_patterns[2][4]=nil
end

function update_nb()
 -- main update noteboard func
 if stat(24)!=-1 then
  local i,j,note_y
  --update note positions
  --do maths
  for i=1,4 do
   --i represents the sfx/track
   if nb_patterns[stat(24)][i]!=nil then

    local note_num=stat(i+19)
    for j=1,32 do
     --j represents the noteboard string position
     --each note gets 6 pixels of space
     --we need to calculate which y position to display relevant notes
     if (sub(nb_patterns[stat(24)][i][2],j,j)!=".") then
      if note_num<=j then
       --only current and future notes are relevant
       note_y=(120-(j-note_num)*6)+mid(0,(stat(26)%20)/6,5)
       if i==1 then
        rectfill(51,note_y,51+6,note_y+1,3)
       else
        rectfill(74,note_y,74+6,note_y+1,4)
       end
      end
     end
    end
   end
  end
 end
end
-->8
--tab 2
--debug functions
function update_debug()
 dbg_statname={"frmrate",
  "sfx1","sfx2","sfx3","sfx4",
  "note1","note2","note3","note4",
  "pattern","pticks"}
 dbg_statnum={7,16,17,18,19,20,21,22,23,24,26}
end

function draw_debug()
 local i
 for i=1,#dbg_statnum do
  print(dbg_statname[i]..": "..stat(dbg_statnum[i]),0,7*i)
 end
end
-->8
--tab 3
__gfx__
0000000000aaaa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0077a0000000000000000000022222222c000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700a000007a00000000000000000022eeeeeee2c00000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000a0c0c00a0000000000000000022eeeeeeeee220000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000a000000a000000000000000002eee77e77eee20000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700a090900a000000000000000002eee07e07eee20000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a9990aa000000000000000002eeceeeeecee20000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaaa0000000000000000002ecfeeeeefce20000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002eeee888eeee20000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000ceee222eeec00000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000eeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000c0000eee0000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000888eee888000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000e22222288888e88888222222e0000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000e22222888888888788822222e0000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888887888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888888788000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000088888888888880000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000008888888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000088888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000008888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002888200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000292000292000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000222000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
01140000041430000000000000002465200602186031a603041431860300000000002465200000000000000004143000000000000000246520000000000000000414300000000000000024652000000000000000
000d0000235502255022750217501f7501d5501b550197501775013550115500f7500e7500b55009750097500b5500d5501075011750135501455016750197501b5501c5501e7501e75020750215502255022750
011400000c0001d000280002800028000000000000000000000001c1001c155000001c1551c100000000000000000000000000000000000000000000000000001c100000001c155000001c1551c1000000000000
011400000414304143000000000000000000000000000000000000000024652000000000024600000000000004143041430000000000000000000000000000000000000000246520000000000246000000000000
__music__
00 00024344
00 00024344
00 03424344

