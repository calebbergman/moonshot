pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- moonbeats
-- by berg bros

left,right,up,down,fire1,fire2=0,1,2,3,4,5
black,dark_blue,dark_purple,dark_green,brown,dark_gray,light_gray,white,red,orange,yellow,green,blue,indigo,pink,peach=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15

function _init()
 lane.init()
 p1.init()
end

function _update60()
 p1.update()
end

function _draw()
 cls()
 lane.draw()
	p1.draw()
 nb.draw()
 if debug.enabled then debug.draw() end
end

-->8
-- player
p1 = {
 width=8,
 height=8,
 prev_x=0,
 x=0,
 dx=1,
 y=0,
 lane=0,
 dest=0,
 moving_started=0,
 moving_time=150,
 is_moving=false,
 start_move=function()
  p1.is_moving = true
  p1.moving_started = now()
  p1.prev_x = p1.x
 end,
 move_left=function()
  p1.start_move()
  p1.lane = (p1.lane == 1) and 1 or (p1.lane - 1)
	 p1.dest = p1.get_dest()
  p1.distance = abs(p1.x - p1.dest)
	 p1.dx = -1
 end,
 move_right=function()
  p1.start_move()
  p1.lane = (p1.lane >= #lane.x) and #lane.x or (p1.lane + 1)
  p1.dest = p1.get_dest()
  p1.distance = abs(p1.x - p1.dest)
	 p1.dx = 1
 end,
 move=function()
  local elapsed = now() - p1.moving_started
  if (elapsed >= p1.moving_time) then
	 	p1.stop_move()
  else
   local perc = (elapsed) / p1.moving_time
   p1.x = p1.prev_x + (p1.dx * p1.distance * ease_out_quad(perc))
  end
 end,
 stop_move=function()
  p1.x = p1.dest
 	p1.is_moving = false
 	p1.moving_started = 0
 end,
 get_dest=function()
  return lane.x[p1.lane] + ceil((lane.width - p1.width) / 2)
 end,
 update=function()
  if (p1.x > lane.x[1] and btnp(⬅️)) then
   p1.move_left()
  elseif (p1.x < (lane.x[#lane.x]) and btnp(➡️)) then
   p1.move_right()
  end
  if p1.is_moving then
   p1.move()
  end
  
  if (btn(❎)) then
   nb.play(0)
  end
 end,
 draw=function()
  spr(2,p1.x,p1.y,1,1)
  -- scaling: sspr(55,-1,16,16,p1.x,p1.y,8,8)
 end,
 init=function()
  p1.lane = 1
  p1.dest = p1.get_dest()
  p1.x = p1.dest
  p1.y = lane.y + ceil((lane.height - p1.height) / 2)
 end
}
-->8
-- lanes
lane = {
 width=8,
 height=8,
 x={},
 y=0,
 color={ red, yellow, green, blue },
 count=3,
 padding=15,
 start=0,
 draw=function()
  for i=0,(#lane.x - 1) do
  rect(
   lane.x[i + 1],
   lane.y,
   lane.x[i + 1] + lane.width,
   lane.y + lane.height,
   lane.color[i + 1]
  )
  end
 end,
 init=function()
  lane.y = 121 - lane.height
  lane.start = 127 - (((lane.count + 1) * lane.width) + (lane.padding * (lane.count)))
  for i=0,lane.count do
   lane.x[i + 1] = lane.start + ((lane.width + lane.padding) * i)
  end
 end
}
-->8
-- tunes
tunes = {
 get_sfx=function(index) -- returns #32{}
  local offset = index * 68
  local effect = {}
  local has_volume
  for i=0,31 do
   has_volume = tunes.sfx_has_volume( @(0x3201 + offset + (i * 2)) )
   add(effect, (has_volume and 1) or 0)
  end
  return effect
 end,
 -- build bits table from decimal value located in the volume/effect bytes' position
 sfx_has_volume=function(number)
  local decimal = number
  local bits = { 0, 0, 0, 0, 0, 0, 0, 0 }
  local i = 8
  while (i > 0) do
   if (decimal <= 0) then
    bits[i] = 0
   else
    bits[i] = decimal % 2
    decimal = flr(decimal / 2)
   end
   i-=1
  end
  -- bits = { c, e, e, e, v, v, v, w } where v=volume
  return bits[5] + bits[6] + bits[7] > 0
 end,
 draw_sfx=function(number, x, y)
  local note = (number > 0)
  print(note and "X" or "-", (x != nil) and x or 0, (y != nil) and y or 0, note and 11 or 8)
 end,
 get_channels_for_song=function(index) -- returns #4{}
  local offset = index * 4
  local channel = {}
  for i=0,3 do
   add(channel, @(0x3100 + offset + i))
  end
  return channel
 end,
}
-->8
-- noteboard functions
nb = {
 pattern={}, -- { {1,2,3,4...32}, {5,6,7,8...32}, {9,a,b,c...32}, {d,e,f,0...32} }
 play=function(song_num)
  local path = "debug.txt"
  nb.pattern = {} -- clear
  local patterns = tunes.get_channels_for_song(song_num) -- { 1, 2, 3, 4 } sfx ids
  for i=1,#patterns do
   add(nb.pattern, tunes.get_sfx(patterns[i]))
  end
  
  music(song_num)
 end,
 draw=function()
  local playing_pattern = stat(24) -- music id
  if playing_pattern == -1 then return end

  for i=1,#nb.pattern do
   local note_num=stat(i+19)
   for j=1,32 do
    local note_is_relevant = note_num <= j
    if note_is_relevant then
     if nb.pattern[i][j] > 0 then
       note_y=(120 - (j - note_num) * 6) + mid(0, (stat(26) % 20) / 6, 5)
       rectfill(lane.x[i], note_y, lane.x[i] + lane.width, note_y + 1, lane.color[i])
      end
     end
   end
  end
  
 end
}

-->8
--utils
function now()
	return flr(t() * 1000)
end

function ease_out_quad(x)
	return 1 - pow(1 - x, 2)
end

function pow(value, times)
 local result = 1
	for i=1,times do
		result *= value
	end
	return result
end

-->8
--debug functions
debug={
 enabled=true,
 stats = {
  { "frmrate", 7 },
  { "sfx1", 16 },
  { "sfx2", 17 },
  { "sfx3", 18 },
  { "sfx4", 19 },
  { "note1", 20 },
  { "note2", 21 },
  { "note3", 22 },
  { "note4", 23 },
  { "pattern", 24 },
  { "pticks", 26 },
 },
 draw=function()
  for i=1,#debug.stats do
   print(debug.stats[i][1]..": "..stat(debug.stats[i][2]),0,7*i,12)
  end
 end,
}

__gfx__
0000000000aaaa000005600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0077a0000770000000000000022222222c000000000000000000066000000000000000000000000000000000000000000000000000000000000000
00700700a000007a0067c600000000000022eeeeeee2c00000000000000000666600000000000000000000000000000000000000000000000000000000000000
00077000a0c0c00a0666656000000000022eeeeeeeee220000000000000006555560000000000000000000000000000000000000000000000000000000000000
00077000a000000a666566660000000002eee77e77eee20000000000000005677650000000000000000000000000000000000000000000000000000000000000
00700700a090900a655665560000000002eee07e07eee200000000000000057c1750000000000000000000000000000000000000000000000000000000000000
000000000a9990aa000550000000000002eeceeeeecee200000000000000657cc756000000000000000000000000000000000000000000000000000000000000
0000000000aaaaa0006666000000000002ecfeeeeefce20000000000000665677656600000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002eeee888eeee20000000000006665666656660000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000ceee222eeec00000000000066665666656666000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000eeeeeee0000000000000666666566566666600000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000c0000eee0000c0000000000065555655655556000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000888eee888000000000000000005666650000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000e22222288888e88888222222e0000000006666660000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000e22222888888888788822222e0000000055555555000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888887888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888888788000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000888888888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000088888888888880000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000008888888888800000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000888888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000088888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000008888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002888200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000292000292000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000222000222000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
01140000040710000000000000002465200600186001a600041431860000000000002465200000000000000004143000000000000000246520000000000000000414300000000000000024652000000000000000
000d0000235502255022750217501f7501d5501b550197501775013550115500f7500e7500b55009750097500b5500d5501075011750135501455016750197501b5501c5501e7501e75020750215502255022750
011400001e0001c0201e00010000270002700011050270001e0001b0500e00018000110001a0500e0001c00010050110000e00010000110001b0001e0000c0500e05010000110001b0001e050000000000000000
011400000414304143000000000000000000000000000000000000000024652000000000000000000000000004143041430000000000000000000000000000000000000000246520000000000000000000000000
011400000905300000000000000009053000000000000000090530000000000000000905300000000000000009053000000000000000090530000000000000000905300000000000000009053000000000000000
011400001660000000166750000000000000001667516600000000000016675000001660000000166750000000000166001667500000000000000016675000000000000000166751660000000000001667500000
__music__
00 04054344
00 40424344
00 40424344

